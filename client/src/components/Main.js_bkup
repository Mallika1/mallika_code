import React, { useState, useEffect } from 'react';
import ThumbnailsView from "./ThumbnailsView"
import LargeImageView from "./LargeImageView"
import ImageAttributeView from "./ImageAttributeView"
import * as Constant  from "../constants"
import API from "../utils/API"


function Main() {
    const [images, setImages] = useState([]);
    const [error, setError] = useState("");
    const [selectedImg, setSelectedImg] = useState("");
    const [isInitLoad, setIsInitLoad] = useState(false);
    const [offset, setOffset] = useState(0);

    // displayThumbnailImages = async (offset,count) => {
    //             try { 
    //                 const res = await API.getThumbnailImages(offset,count)
    //                 if(res.status === Constant.SUCCESS_STATUS){
    //                         setImages(res.data.images)
    //                         setError(res.data.msg)
    //                         if(!isInitLoad){
    //                             let tempImageArr = [...images]
    //                             setSelectedImg(tempImageArr[0])
    //                             setIsInitLoad(true)
    //                         }
    //                 }
    //             } catch (err) {
    //                console.log(err)
    //             }
    //         };

   function displayThumbnailImages(offset, Constant.LIMIT){

    }
    // Similar to componentDidMount and componentDidUpdate:
    useEffect(() => {
        // Update the document title using the browser API
        displayThumbnailImages(offset, Constant.LIMIT)
    });

    handleShowNext = () => {
            setOffset(offset+ Constant.LIMIT)
            displayThumbnailImages(offset, Constant.LIMIT)
    };

    handleShowPrevious = () => {
            setOffset(offset- Constant.LIMIT)
            displayThumbnailImages(offset, Constant.LIMIT)
    };

    handleImgClick = (e) => {
        e.preventDefault();
        let imgId = e.target.id
        //with this id find the image and meta data from the state array 
        var newArray = [...images].filter(x => x.id === imgId)
        setSelectedImg(newArray[0])
    }
    
  return (
    <div>
    <p>You clicked {count} times</p>
    <button onClick={() => setCount(count + 1)}>
      Click me
    </button>
  </div>
  )
}
export default Main;
